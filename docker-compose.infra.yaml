version: '3.9'
networks:
  vendas-network:
    driver: bridge
    name: vendas-network
    
services:
  auth-db:
    container_name: auth-db
    restart: always
    image: postgres
    networks:
      - vendas-network
    ports:
      - 5432:5432
    environment:
      POSTGRES_PASSWORD: 123456
      POSTGRES_USER: admin
      POSTGRES_DB: auth-db
    volumes:
      - data_auth:/var/lib/postgresql/data

  product-db:
    container_name: product-db
    restart: always
    image: postgres
    networks:
      - vendas-network
    ports:
      - 5433:5432
    environment:
      POSTGRES_PASSWORD: 123456
      POSTGRES_USER: admin
      POSTGRES_DB: product-db
    volumes:
      - data_product:/var/lib/postgresql/data

  sales-db:
    image: "mongo"
    container_name: sales-db
    restart: always
    networks:
      - vendas-network
    environment:
      MONGO_INITDB_ROOT_USERNAME: "admin"
      MONGO_INITDB_ROOT_PASSWORD: 123456
    ports:
        - 27017:27017  
    volumes:
      - data_sales:/data/db

  mongo-express:
    image: mongo-express
    container_name: mongo-ui
    networks:
      - vendas-network
    ports:
      - 8085:8081
    environment:
        ME_CONFIG_MONGODB_ADMINUSERNAME: "admin"
        ME_CONFIG_MONGODB_ADMINPASSWORD: 123456
        ME_CONFIG_MONGODB_URL: "mongodb://admin:123456@sales-db:27017/?authSource=admin"
        ME_CONFIG_BASICAUTH_USERNAME: "mexpress"
        ME_CONFIG_BASICAUTH_PASSWORD: "mexpress"
    links:
      - sales-db

  sales_rabbit:
    image: rabbitmq:3-management-alpine
    container_name: sales_rabbit
    networks:
      - vendas-network
    ports:
        - 5672:5672
        - 15672:15672
    volumes:
        - rabbitmq_data:/var/lib/rabbitmq/
        - rabbitmq_log:/var/log/rabbitmq

volumes:
  data_auth: {}
  data_product: {}
  data_sales: {}
  rabbitmq_data: {}
  rabbitmq_log: {}

